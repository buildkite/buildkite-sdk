// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

type CommandStepNotifyUnionValues interface {
	NotifySimple | NotifyBasecamp | NotifySlack | NotifyGithubCommitStatus | NotifyGithubCheck
}
type CommandStepNotifyUnion struct {
	NotifySimple             *NotifySimple
	NotifyBasecamp           *NotifyBasecamp
	NotifySlack              *NotifySlack
	NotifyGithubCommitStatus *NotifyGithubCommitStatus
	NotifyGithubCheck        *NotifyGithubCheck
}

func (e CommandStepNotifyUnion) MarshalJSON() ([]byte, error) {
	if e.NotifySimple != nil {
		return json.Marshal(e.NotifySimple)
	}
	if e.NotifyBasecamp != nil {
		return json.Marshal(e.NotifyBasecamp)
	}
	if e.NotifySlack != nil {
		return json.Marshal(e.NotifySlack)
	}
	if e.NotifyGithubCommitStatus != nil {
		return json.Marshal(e.NotifyGithubCommitStatus)
	}
	if e.NotifyGithubCheck != nil {
		return json.Marshal(e.NotifyGithubCheck)
	}
	return json.Marshal(nil)
}

type CommandStepNotify = []CommandStepNotifyUnion
