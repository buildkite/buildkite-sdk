// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

type TriggerStepAsyncValues interface {
	bool | string
}
type TriggerStepAsync struct {
	Bool   *bool
	String *string
}

func (e TriggerStepAsync) MarshalJSON() ([]byte, error) {
	if e.Bool != nil {
		return json.Marshal(e.Bool)
	}
	if e.String != nil {
		return json.Marshal(e.String)
	}
	return json.Marshal(nil)
}

type TriggerStepBuildMetaData = map[string]string
type TriggerStepBuild struct {
	Branch   *string                   `json:"branch,omitempty"`
	Commit   *string                   `json:"commit,omitempty"`
	Env      *Env                      `json:"env,omitempty"`
	Message  *string                   `json:"message,omitempty"`
	MetaData *TriggerStepBuildMetaData `json:"meta_data,omitempty"`
}
type TriggerStepType string

var TriggerStepTypeValues = map[string]TriggerStepType{
	"trigger": "trigger",
}

type TriggerStep struct {
	AllowDependencyFailure *AllowDependencyFailure `json:"allow_dependency_failure,omitempty"`
	Async                  *TriggerStepAsync       `json:"async,omitempty"`
	Branches               *Branches               `json:"branches,omitempty"`
	Build                  *TriggerStepBuild       `json:"build,omitempty"`
	DependsOn              *DependsOn              `json:"depends_on,omitempty"`
	Id                     *string                 `json:"id,omitempty"`
	Identifier             *string                 `json:"identifier,omitempty"`
	If                     *string                 `json:"if,omitempty"`
	IfChanged              *string                 `json:"if_changed,omitempty"`
	Key                    *string                 `json:"key,omitempty"`
	Label                  *string                 `json:"label,omitempty"`
	Name                   *string                 `json:"name,omitempty"`
	Skip                   *Skip                   `json:"skip,omitempty"`
	SoftFail               *SoftFail               `json:"soft_fail,omitempty"`
	Trigger                *string                 `json:"trigger,omitempty"`
	Type                   *TriggerStepType        `json:"type,omitempty"`
}
