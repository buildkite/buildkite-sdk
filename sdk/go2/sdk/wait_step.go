// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

type WaitStepContinueOnFailureValues interface {
	bool | string
}
type WaitStepContinueOnFailure struct {
	Bool   *bool
	String *string
}

func (e WaitStepContinueOnFailure) MarshalJSON() ([]byte, error) {
	if e.Bool != nil {
		return json.Marshal(e.Bool)
	}
	if e.String != nil {
		return json.Marshal(e.String)
	}
	return json.Marshal(nil)
}

type WaitStepType string

var WaitStepTypeValues = map[string]WaitStepType{
	"wait":   "wait",
	"waiter": "waiter",
}

type WaitStep struct {
	AllowDependencyFailure *AllowDependencyFailure    `json:"allow_dependency_failure,omitempty"`
	Branches               *Branches                  `json:"branches,omitempty"`
	ContinueOnFailure      *WaitStepContinueOnFailure `json:"continue_on_failure,omitempty"`
	DependsOn              *DependsOn                 `json:"depends_on,omitempty"`
	Id                     *string                    `json:"id,omitempty"`
	Identifier             *string                    `json:"identifier,omitempty"`
	If                     *string                    `json:"if,omitempty"`
	Key                    *string                    `json:"key,omitempty"`
	Label                  *string                    `json:"label,omitempty"`
	Name                   *string                    `json:"name,omitempty"`
	Type                   *WaitStepType              `json:"type,omitempty"`
	Wait                   *string                    `json:"wait,omitempty"`
}
