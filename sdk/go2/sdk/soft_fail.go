// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

type SoftFailEnumValues interface {
	bool | string
}
type SoftFailEnum struct {
	Bool   *bool
	String *string
}

func (e SoftFailEnum) MarshalJSON() ([]byte, error) {
	if e.Bool != nil {
		return json.Marshal(e.Bool)
	}
	if e.String != nil {
		return json.Marshal(e.String)
	}
	return json.Marshal(nil)
}

type SoftFailValues interface {
	SoftFailEnum | SoftFailList
}
type SoftFail struct {
	SoftFailEnum *SoftFailEnum
	SoftFailList *SoftFailList
}

func (e SoftFail) MarshalJSON() ([]byte, error) {
	if e.SoftFailEnum != nil {
		return json.Marshal(e.SoftFailEnum)
	}
	if e.SoftFailList != nil {
		return json.Marshal(e.SoftFailList)
	}
	return json.Marshal(nil)
}
