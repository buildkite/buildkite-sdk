// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

type AutomaticRetryExitStatusEnum string

var AutomaticRetryExitStatusEnumValues = map[string]AutomaticRetryExitStatusEnum{
	"*": "*",
}

// The exit status number that will cause this job to retry
type AutomaticRetryExitStatusValues interface {
	AutomaticRetryExitStatusEnum | int | []int
}

// The exit status number that will cause this job to retry
type AutomaticRetryExitStatus struct {
	AutomaticRetryExitStatusEnum *AutomaticRetryExitStatusEnum
	Int                          *int
	IntArray                     []int
}

func (e AutomaticRetryExitStatus) MarshalJSON() ([]byte, error) {
	if e.AutomaticRetryExitStatusEnum != nil {
		return json.Marshal(e.AutomaticRetryExitStatusEnum)
	}
	if e.Int != nil {
		return json.Marshal(e.Int)
	}
	if e.IntArray != nil {
		return json.Marshal(e.IntArray)
	}
	return json.Marshal(nil)
}

type AutomaticRetrySignalReason string

// The exit signal reason, if any, that may be retried
var AutomaticRetrySignalReasonValues = map[string]AutomaticRetrySignalReason{
	"*":                  "*",
	"none":               "none",
	"agent_refused":      "agent_refused",
	"agent_stop":         "agent_stop",
	"cancel":             "cancel",
	"process_run_error":  "process_run_error",
	"signature_rejected": "signature_rejected",
}

type AutomaticRetry struct {
	// The exit status number that will cause this job to retry
	ExitStatus *AutomaticRetryExitStatus `json:"exit_status,omitempty"`
	// The number of times this job can be retried
	Limit *int `json:"limit,omitempty"`
	// The exit signal, if any, that may be retried
	Signal *string `json:"signal,omitempty"`
	// The exit signal reason, if any, that may be retried
	SignalReason *AutomaticRetrySignalReason `json:"signal_reason,omitempty"`
}
