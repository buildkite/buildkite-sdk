// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

type CommandStepArtifactPathsValues interface {
	string | []string
}
type CommandStepArtifactPaths struct {
	String      *string
	StringArray []string
}

func (e CommandStepArtifactPaths) MarshalJSON() ([]byte, error) {
	if e.String != nil {
		return json.Marshal(e.String)
	}
	if e.StringArray != nil {
		return json.Marshal(e.StringArray)
	}
	return json.Marshal(nil)
}

type CommandStepConcurrencyMethod string

var CommandStepConcurrencyMethodValues = map[string]CommandStepConcurrencyMethod{
	"ordered": "ordered",
	"eager":   "eager",
}

type CommandStepRetry struct {
	Automatic *CommandStepAutomaticRetry `json:"automatic,omitempty"`
	Manual    *CommandStepManualRetry    `json:"manual,omitempty"`
}
type CommandStepSignature struct {
	Algorithm    *string  `json:"algorithm,omitempty"`
	SignedFields []string `json:"signed_fields,omitempty"`
	Value        *string  `json:"value,omitempty"`
}
type CommandStepType string

var CommandStepTypeValues = map[string]CommandStepType{
	"script":   "script",
	"command":  "command",
	"commands": "commands",
}

type CommandStep struct {
	Agents                 *Agents                       `json:"agents,omitempty"`
	AllowDependencyFailure *AllowDependencyFailure       `json:"allow_dependency_failure,omitempty"`
	ArtifactPaths          *CommandStepArtifactPaths     `json:"artifact_paths,omitempty"`
	Branches               *Branches                     `json:"branches,omitempty"`
	Cache                  *Cache                        `json:"cache,omitempty"`
	CancelOnBuildFailing   *CancelOnBuildFailing         `json:"cancel_on_build_failing,omitempty"`
	Command                *CommandStepCommand           `json:"command,omitempty"`
	Commands               *CommandStepCommand           `json:"commands,omitempty"`
	Concurrency            *int                          `json:"concurrency,omitempty"`
	ConcurrencyGroup       *string                       `json:"concurrency_group,omitempty"`
	ConcurrencyMethod      *CommandStepConcurrencyMethod `json:"concurrency_method,omitempty"`
	DependsOn              *DependsOn                    `json:"depends_on,omitempty"`
	Env                    *Env                          `json:"env,omitempty"`
	Id                     *string                       `json:"id,omitempty"`
	Identifier             *string                       `json:"identifier,omitempty"`
	If                     *string                       `json:"if,omitempty"`
	IfChanged              *string                       `json:"if_changed,omitempty"`
	Image                  *string                       `json:"image,omitempty"`
	Key                    *string                       `json:"key,omitempty"`
	Label                  *string                       `json:"label,omitempty"`
	Matrix                 *Matrix                       `json:"matrix,omitempty"`
	Name                   *string                       `json:"name,omitempty"`
	Notify                 *CommandStepNotify            `json:"notify,omitempty"`
	Parallelism            *int                          `json:"parallelism,omitempty"`
	Plugins                *Plugins                      `json:"plugins,omitempty"`
	Priority               *int                          `json:"priority,omitempty"`
	Retry                  *CommandStepRetry             `json:"retry,omitempty"`
	Signature              *CommandStepSignature         `json:"signature,omitempty"`
	Skip                   *Skip                         `json:"skip,omitempty"`
	SoftFail               *SoftFail                     `json:"soft_fail,omitempty"`
	TimeoutInMinutes       *int                          `json:"timeout_in_minutes,omitempty"`
	Type                   *CommandStepType              `json:"type,omitempty"`
}
