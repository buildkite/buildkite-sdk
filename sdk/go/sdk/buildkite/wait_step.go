// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import "encoding/json"

// Continue to the next steps, even if the previous group of steps fail
type WaitStepContinueOnFailureValues interface {
	bool | string
}

// Continue to the next steps, even if the previous group of steps fail
type WaitStepContinueOnFailure struct {
	Bool   *bool
	String *string
}

func (e WaitStepContinueOnFailure) MarshalJSON() ([]byte, error) {
	if e.Bool != nil {
		return json.Marshal(e.Bool)
	}
	if e.String != nil {
		return json.Marshal(e.String)
	}
	return json.Marshal(nil)
}

type WaitStepType string

var WaitStepTypeValues = map[string]WaitStepType{
	"wait":   "wait",
	"waiter": "waiter",
}

type WaitStep struct {
	// Whether to proceed with this step and further steps if a step named in the depends_on attribute fails
	AllowDependencyFailure *AllowDependencyFailure `json:"allow_dependency_failure,omitempty"`
	// Which branches will include this step in their builds
	Branches *Branches `json:"branches,omitempty"`
	// Continue to the next steps, even if the previous group of steps fail
	ContinueOnFailure *WaitStepContinueOnFailure `json:"continue_on_failure,omitempty"`
	// The step keys for a step to depend on
	DependsOn *DependsOn `json:"depends_on,omitempty"`
	// A unique identifier for a step, must not resemble a UUID
	Id *string `json:"id,omitempty"`
	// A unique identifier for a step, must not resemble a UUID
	Identifier *string `json:"identifier,omitempty"`
	// A boolean expression that omits the step when false
	If *string `json:"if,omitempty"`
	// A unique identifier for a step, must not resemble a UUID
	Key *string `json:"key,omitempty"`
	// Waits for previous steps to pass before continuing
	Label *string `json:"label,omitempty"`
	// Waits for previous steps to pass before continuing
	Name *string       `json:"name,omitempty"`
	Type *WaitStepType `json:"type,omitempty"`
	// Waits for previous steps to pass before continuing
	Wait *string `json:"wait,omitempty"`
}
