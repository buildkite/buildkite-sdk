// Code generated by the gen package. DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

export type Agents = AgentsObject | AgentsList
export type AgentsList = string[]
export type AgentsObject = Record<string, any>
export type AllowDependencyFailure = true | false | 'true' | 'false'
export type AllowedTeams = string | string[]
export interface AutomaticRetry { 
	exit_status?: '*' | number | number[]

	limit?: number

	signal?: string

	signal_reason?: '*' | 'none' | 'agent_refused' | 'agent_stop' | 'cancel' | 'process_run_error' | 'signature_rejected'
}
export type AutomaticRetryList = AutomaticRetry[]
export interface BlockStep { 
	allow_dependency_failure?: AllowDependencyFailure

	allowed_teams?: AllowedTeams

	block?: string

	blocked_state?: 'passed' | 'failed' | 'running'

	branches?: Branches

	depends_on?: DependsOn

	fields?: Fields

	id?: string

	identifier?: string

	if?: string

	key?: string

	label?: string

	name?: string

	prompt?: string

	type?: 'block'
}
export type Branches = string | string[]
export type BuildNotify = (NotifySimple | NotifyEmail | NotifyBasecamp | NotifySlack | NotifyWebhook | NotifyPagerduty | NotifyGithubCommitStatus | NotifyGithubCheck)[]
export type Cache = string | string[] | { 
	name?: string

	paths: string[]

	size?: string
}
export type CancelOnBuildFailing = true | false | 'true' | 'false'
export interface CommandStep { 
	agents?: Agents

	allow_dependency_failure?: AllowDependencyFailure

	artifact_paths?: string | string[]

	branches?: Branches

	cache?: Cache

	cancel_on_build_failing?: CancelOnBuildFailing

	command?: CommandStepCommand

	commands?: CommandStepCommand

	concurrency?: number

	concurrency_group?: string

	concurrency_method?: 'ordered' | 'eager'

	depends_on?: DependsOn

	env?: Env

	id?: string

	identifier?: string

	if?: string

	if_changed?: string

	image?: string

	key?: string

	label?: string

	matrix?: Matrix

	name?: string

	notify?: CommandStepNotify

	parallelism?: number

	plugins?: Plugins

	priority?: number

	retry?: { 
	automatic?: CommandStepAutomaticRetry

	manual?: CommandStepManualRetry
}

	signature?: { 
	algorithm?: string

	signed_fields?: string[]

	value?: string
}

	skip?: Skip

	soft_fail?: SoftFail

	timeout_in_minutes?: number

	type?: 'script' | 'command' | 'commands'
}
export type CommandStepAutomaticRetry = true | false | 'true' | 'false' | AutomaticRetry | AutomaticRetryList
export type CommandStepCommand = string[] | string
export type CommandStepManualRetry = true | false | 'true' | 'false' | CommandStepManualRetryObject
export interface CommandStepManualRetryObject { 
	allowed?: true | false | 'true' | 'false'

	permit_on_passed?: true | false | 'true' | 'false'

	reason?: string
}
export type CommandStepNotify = (NotifySimple | NotifyBasecamp | NotifySlack | NotifyGithubCommitStatus | NotifyGithubCheck)[]
export type DependsOn = string | DependsOnList
export type DependsOnList = (string | { 
	allow_failure?: true | false | 'true' | 'false'

	step?: string
})[]
export type Env = Record<string, any>
export type Fields = (TextField | SelectField)[]
export interface GroupStep { 
	allow_dependency_failure?: AllowDependencyFailure

	depends_on?: DependsOn

	group: string

	id?: string

	identifier?: string

	if?: string

	if_changed?: string

	key?: string

	label?: string

	name?: string

	notify?: BuildNotify

	skip?: Skip

	steps: GroupSteps
}
export type GroupSteps = (BlockStep | NestedBlockStep | StringBlockStep | InputStep | NestedInputStep | StringInputStep | CommandStep | NestedCommandStep | WaitStep | NestedWaitStep | StringWaitStep | TriggerStep | NestedTriggerStep)[]
export type If = string
export type IfChanged = string
export type Image = string
export interface InputStep { 
	allow_dependency_failure?: AllowDependencyFailure

	allowed_teams?: AllowedTeams

	branches?: Branches

	depends_on?: DependsOn

	fields?: Fields

	id?: string

	identifier?: string

	if?: string

	input?: string

	key?: string

	label?: string

	name?: string

	prompt?: string

	type?: 'input'
}
export type Key = string
export type Label = string
export type Matrix = MatrixElementList | MatrixObject
export interface MatrixAdjustments { 
	skip?: Skip

	soft_fail?: SoftFail

	with: MatrixElementList | MatrixAdjustmentsWithObject
}
export type MatrixAdjustmentsWithObject = Record<string, any>
export type MatrixElement = string | number | boolean
export type MatrixElementList = (string | number | boolean)[]
export interface MatrixObject { 
	adjustments?: MatrixAdjustments[]

	setup: MatrixSetup
}
export type MatrixSetup = MatrixElementList | { }
export interface NestedBlockStep { 
	block?: BlockStep
}
export interface NestedCommandStep { 
	command?: CommandStep

	commands?: CommandStep

	script?: CommandStep
}
export interface NestedInputStep { 
	input?: InputStep
}
export interface NestedTriggerStep { 
	trigger?: TriggerStep
}
export interface NestedWaitStep { 
	wait?: WaitStep

	waiter?: WaitStep
}
export interface NotifyBasecamp { 
	basecamp_campfire?: string

	if?: string
}
export interface NotifyEmail { 
	email?: string

	if?: string
}
export interface NotifyGithubCheck { 
	github_check?: Record<string,any>
}
export interface NotifyGithubCommitStatus { 
	github_commit_status?: { 
	context?: string
}

	if?: string
}
export interface NotifyPagerduty { 
	if?: string

	pagerduty_change_event?: string
}
export type NotifySimple = 'github_check' | 'github_commit_status'
export interface NotifySlack { 
	if?: string

	slack?: string | NotifySlackObject
}
export interface NotifySlackObject { 
	channels?: string[]

	message?: string
}
export interface NotifyWebhook { 
	if?: string

	webhook?: string
}
export type PipelineSteps = (BlockStep | NestedBlockStep | StringBlockStep | InputStep | NestedInputStep | StringInputStep | CommandStep | NestedCommandStep | WaitStep | NestedWaitStep | StringWaitStep | TriggerStep | NestedTriggerStep | GroupStep)[]
export type Plugins = PluginsList | PluginsObject
export type PluginsList = (string | { })[]
export type PluginsObject = Record<string, any>
export type Prompt = string
export interface SelectField { 
	default?: string | string[]

	hint?: string

	key: string

	multiple?: true | false | 'true' | 'false'

	options: SelectFieldOption[]

	required?: true | false | 'true' | 'false'

	select?: string
}
export interface SelectFieldOption { 
	hint?: string

	label: string

	required?: true | false | 'true' | 'false'

	value: string
}
export type Skip = boolean | string
export type SoftFail = true | false | 'true' | 'false' | SoftFailList
export type SoftFailList = SoftFailObject[]
export interface SoftFailObject { 
	exit_status?: '*' | number
}
export type StringBlockStep = 'block'
export type StringInputStep = 'input'
export type StringWaitStep = 'wait' | 'waiter'
export interface TextField { 
	default?: string

	format?: string

	hint?: string

	key: string

	required?: true | false | 'true' | 'false'

	text?: string
}
export interface TriggerStep { 
	allow_dependency_failure?: AllowDependencyFailure

	async?: true | false | 'true' | 'false'

	branches?: Branches

	build?: { 
	branch?: string

	commit?: string

	env?: Env

	message?: string

	meta_data?: Record<string, any>
}

	depends_on?: DependsOn

	id?: string

	identifier?: string

	if?: string

	if_changed?: string

	key?: string

	label?: string

	name?: string

	skip?: Skip

	soft_fail?: SoftFail

	trigger: string

	type?: 'trigger'
}
export interface WaitStep { 
	allow_dependency_failure?: AllowDependencyFailure

	branches?: Branches

	continue_on_failure?: true | false | 'true' | 'false'

	depends_on?: DependsOn

	id?: string

	identifier?: string

	if?: string

	key?: string

	label?: string

	name?: string

	type?: 'wait' | 'waiter'

	wait?: string
}
export interface BuildkitePipeline { 
	agents?: Agents

	env?: Env

	image?: Image

	notify?: BuildNotify

	steps?: PipelineSteps
}
